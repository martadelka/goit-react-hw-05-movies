{"version":3,"file":"static/js/321.a100de63.chunk.js","mappings":"+NAEaA,EAAkBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sLAM/B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAE,IAMjBC,EAAgBN,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gLAEvB,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAC,IACvB,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,WAAWC,WAAW,IAElC,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAUC,UAAU,I,SCdnC,SAASC,EAASC,GAAY,IAATC,EAAID,EAAJC,KAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACpB,EAAe,CAAAqB,SACbJ,EAAKK,KAAI,SAAAC,GAAiC,IAA9BC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAChBC,GAAYC,EAAAA,EAAAA,IAAaF,GAE/B,OADAG,QAAQC,IAAIH,IAEVP,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMf,GAAYgB,GAAE,WAAAC,OAAaX,GAAKH,UACnDe,EAAAA,EAAAA,MAAC7B,EAAa,CAAAc,SAAA,EACZD,EAAAA,EAAAA,KAAA,OAAKiB,IAAKV,EAAWW,IAAKb,KAC1BL,EAAAA,EAAAA,KAAA,KAAAC,SAAII,QAHmDD,EAO/D,KAGN,C,kKCtBae,E,QAAatC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qpBAWX,SAAAC,GAAC,OAAIA,EAAEC,MAAMmC,OAAOC,OAAO,IAKtC,SAAArC,GAAC,OAAIA,EAAEC,MAAMmC,OAAOE,IAAI,IACvB,SAAAtC,GAAC,OAAIA,EAAEC,MAAMsC,QAAQC,IAAI,IAGxB,SAAAxC,GAAC,OAAIA,EAAEC,MAAMmC,OAAOK,OAAO,IAQ3B,SAAAzC,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAC,IAM3B,SAAAN,GAAC,OAAIA,EAAEC,MAAMsC,QAAQC,IAAI,IAGpB,SAAAxC,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAC,I,SCxB5B,SAASoC,IACtB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAmC1B,OAhCAG,EAAAA,EAAAA,YAAU,WACHV,KAILW,EAAAA,EAAAA,IAAaX,GAAOY,MAAK,SAAAC,GACvBnC,QAAQC,IAAIkC,GACZJ,GAAW,GAEe,IAAtBI,EAAIC,gBACNC,EAAAA,EAAAA,MAEEF,EAAIC,cAAgB,IACtBE,EAAAA,EAAAA,MAGFC,YAAW,YACTN,EAAAA,EAAAA,IAAaX,EAAMkB,QAChBN,MAAK,SAAAC,GACJnC,QAAQC,IAAIkC,GACZR,EAAUQ,EAAIM,QAChB,IACCC,MAAMC,EAAAA,IACNC,SAAQ,WACPb,GAAW,EACb,GACJ,GAAG,IACL,IAEAA,GAAW,GACb,GAAG,CAACT,KAGF/B,EAAAA,EAAAA,KAAAsD,EAAAA,SAAA,CAAArD,UACED,EAAAA,EAAAA,KAAA,QAAMuD,MAAO,CAAEC,SAAU,KAAMvD,UAC7Be,EAAAA,EAAAA,MAACG,EAAU,CACTsC,SAAU,SAAAC,GACRA,EAAMC,iBACN3B,EAAS0B,EAAME,cAAcC,cAAc,SAASC,OACpDrD,QAAQC,IAAIqB,EACd,EAAE9B,SAAA,EAEFe,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACED,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACLyC,aAAa,MACbC,WAAS,EACTC,KAAK,SACLC,YAAY,kBAEdlE,EAAAA,EAAAA,KAAA,UAAQiE,KAAK,SAAQhE,UACnBD,EAAAA,EAAAA,KAAA,OACEmE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,QAAQ,YAAWtE,UAEnBD,EAAAA,EAAAA,KAAA,QAAMwE,EAAE,2WAIbjC,IAAWvC,EAAAA,EAAAA,KAACyE,EAAAA,IAAaC,EAAAA,EAAAA,GAAA,GAAKC,EAAAA,KACnB,IAAXxC,IAAoBnC,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACE,KAAMsC,UAKhD,C,0NCvFMyC,EAAU,mCACVC,EAAW,+BAEXC,EAAY,6BAELtE,EAAe,SAAAuE,GAC1B,OAAkB,OAAXA,EAAe,GAAAhE,OACf+D,EAAY,SAAA/D,OAAQgE,GACvB,gEACN,EAQO,SAAerC,EAAYsC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAWjC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MAXM,SAAAC,EAA4BvD,GAAK,IAAAwD,EAAA1F,EAAA,OAAAwF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACfC,EAAAA,EAAAA,IAAU,GAAD5E,OAAI8D,EAAQ,iBAAiB,CAC3De,OAAQ,CACNC,QAAQ,GAAD9E,OAAK6D,GACZkB,SAAU,QACV/D,MAAM,GAADhB,OAAKgB,GACVgE,cAAe,WAEhB,KAAD,EAPU,OAOVR,EAAAC,EAAAQ,KAPMnG,EAAI0F,EAAJ1F,KAAI2F,EAAAS,OAAA,SASLpG,GAAI,wBAAA2F,EAAAU,OAAA,GAAAZ,EAAA,MACZJ,MAAA,KAAAC,UAAA,CAEM,SAAegB,IAAW,OAAAC,EAAAlB,MAAC,KAADC,UAAA,CAQhC,SAAAiB,IAAA,OAAAA,GAAAhB,EAAAA,EAAAA,GAAAC,IAAAA,MARM,SAAAgB,IAAA,IAAAC,EAAAzG,EAAA,OAAAwF,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACkBC,EAAAA,EAAAA,IAAU,GAAD5E,OAAI8D,EAAQ,uBAAuB,CACjEe,OAAQ,CACNC,QAAQ,GAAD9E,OAAK6D,GACZ4B,KAAM,KAEP,KAAD,EALU,OAKVF,EAAAC,EAAAP,KALMnG,EAAIyG,EAAJzG,KAAI0G,EAAAN,OAAA,SAMLpG,GAAI,wBAAA0G,EAAAL,OAAA,GAAAG,EAAA,MACZnB,MAAA,KAAAC,UAAA,CAEM,SAAesB,EAAeC,GAAA,OAAAC,EAAAzB,MAAC,KAADC,UAAA,CAQpC,SAAAwB,IAAA,OAAAA,GAAAvB,EAAAA,EAAAA,GAAAC,IAAAA,MARM,SAAAuB,EAA+BxG,GAAE,IAAAyG,EAAAhH,EAAA,OAAAwF,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACfC,EAAAA,EAAAA,IAAU,GAAD5E,OAAI8D,EAAQ,WAAA9D,OAAUX,GAAM,CAC1DwF,OAAQ,CACNC,QAAQ,GAAD9E,OAAK6D,GACZkB,SAAU,WAEX,KAAD,EALU,OAKVe,EAAAC,EAAAd,KALMnG,EAAIgH,EAAJhH,KAAIiH,EAAAb,OAAA,SAMLpG,GAAI,wBAAAiH,EAAAZ,OAAA,GAAAU,EAAA,MACZ1B,MAAA,KAAAC,UAAA,CAEM,SAAe4B,EAAYC,GAAA,OAAAC,EAAA/B,MAAC,KAADC,UAAA,CAQjC,SAAA8B,IAAA,OAAAA,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MARM,SAAA6B,EAA4B9G,GAAE,IAAA+G,EAAAtH,EAAA,OAAAwF,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACZC,EAAAA,EAAAA,IAAU,GAAD5E,OAAI8D,EAAQ,WAAA9D,OAAUX,EAAE,YAAY,CAClEwF,OAAQ,CACNC,QAAQ,GAAD9E,OAAK6D,GACZkB,SAAU,WAEX,KAAD,EALU,OAKVqB,EAAAC,EAAApB,KALMnG,EAAIsH,EAAJtH,KAAIuH,EAAAnB,OAAA,SAMLpG,GAAI,wBAAAuH,EAAAlB,OAAA,GAAAgB,EAAA,MACZhC,MAAA,KAAAC,UAAA,CAEM,SAAekC,EAAeC,GAAA,OAAAC,EAAArC,MAAC,KAADC,UAAA,CASpC,SAAAoC,IAAA,OAAAA,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MATM,SAAAmC,EAA+BpH,GAAE,IAAAqH,EAAA5H,EAAA,OAAAwF,IAAAA,MAAA,SAAAqC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACfC,EAAAA,EAAAA,IAAU,GAAD5E,OAAI8D,EAAQ,WAAA9D,OAAUX,EAAE,YAAY,CAClEwF,OAAQ,CACNC,QAAQ,GAAD9E,OAAK6D,GACZkB,SAAU,QACVU,KAAM,KAEP,KAAD,EANU,OAMViB,EAAAC,EAAA1B,KANMnG,EAAI4H,EAAJ5H,KAAI6H,EAAAzB,OAAA,SAOLpG,GAAI,wBAAA6H,EAAAxB,OAAA,GAAAsB,EAAA,MACZtC,MAAA,KAAAC,UAAA,C,sHCpEKwC,G,QAAgB,CACpB1I,MAAO,YAGI8D,EAAe,WAC1B,OAAO6E,EAAAA,GAAAA,QACL,2CACAD,EAEJ,EAEa7E,EAAmB,WAC9B,OAAO8E,EAAAA,GAAAA,KACL,kEACAD,EAEJ,EAgBavE,EAAa,WACxB,OAAOwE,EAAAA,GAAAA,MACL,gDACAD,EAEJ,C","sources":["components/FilmsList/FilmsList.styled.js","components/FilmsList/FilmsList.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js","services/fetchAPI.js","services/toasts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmsListStyled = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  gap: ${p => p.theme.space[5]}px;\n\n  margin-left: 160px;\n  margin-right: 160px;\n`;\n\nexport const FilmsListItem = styled.li`\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n  transition: ${p => p.theme.transition.cubicBezier};\n  &:hover {\n    transform: ${p => p.theme.transform.scaleFirst};\n  }\n  & p {\n    max-width: 400px;\n    word-wrap: break-word;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { searchImages } from '../../services/fetchAPI';\nimport { FilmsListStyled, FilmsListItem } from '../FilmsList/FilmsList.styled';\n\nexport default function FilmsList({ data }) {\n  const location = useLocation();\n\n  return (\n    <FilmsListStyled>\n      {data.map(({ id, title, poster_path }) => {\n        const imgPoster = searchImages(poster_path);\n        console.log(imgPoster);\n        return (\n          <Link state={{ from: location }} to={`/movies/${id}`} key={id}>\n            <FilmsListItem>\n              <img src={imgPoster} alt={title} />\n              <p>{title}</p>\n            </FilmsListItem>\n          </Link>\n        );\n      })}\n    </FilmsListStyled>\n  );\n}\n\nFilmsList.propTypes = {\n  data: PropTypes.array.isRequired,\n};","import styled from 'styled-components';\n\nexport const MoviesForm = styled.form`\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 20px 0px;\n\n    button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: ${p => p.theme.colors.bg_dark};\n      height: 48px;\n      width: 80px;\n      border-radius: 5px;\n      margin: 0 6px;\n      color: ${p => p.theme.colors.text};\n      border: ${p => p.theme.borders.none};\n\n      &:hover {\n        color: ${p => p.theme.colors.primary};\n      }\n    }\n  }\n\n  & input {\n    display: block;\n    text-align: center;\n    font-size: ${p => p.theme.fontSizes.m};\n\n    height: 48px;\n    width: 300px;\n\n    border-radius: 5px;\n    border: ${p => p.theme.borders.none};\n\n    ::placeholder {\n      font-size: ${p => p.theme.fontSizes.m};\n    }\n  }\n`;","import { useEffect, useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n\nimport { searchMovies } from '../../services/fetchAPI';\nimport FilmsList from '../../components/FilmsList/FilmsList';\nimport {\n  toastInfoNothing,\n  toastError,\n  toastSuccess,\n} from '../../services/toasts';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { RotatingLinesStyle } from '../../services/spinnerStyles';\n\nimport { MoviesForm } from './Movies.styled';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setloading] = useState(false);\n\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    searchMovies(query).then(res => {\n      console.log(res);\n      setloading(true);\n\n      if (res.total_results === 0) {\n        toastInfoNothing();\n      }\n      if (res.total_results > 0) {\n        toastSuccess();\n      }\n\n      setTimeout(() => {\n        searchMovies(query.trim())\n          .then(res => {\n            console.log(res);\n            setMovies(res.results);\n          })\n          .catch(toastError)\n          .finally(() => {\n            setloading(false);\n          });\n      }, 300);\n    });\n\n    setloading(false);\n  }, [query]);\n\n  return (\n    <>\n      <main style={{ flexGrow: '1' }}>\n        <MoviesForm\n          onSubmit={event => {\n            event.preventDefault();\n            setQuery(event.currentTarget.querySelector('input').value);\n            console.log(query);\n          }}\n        >\n          <div>\n            <input\n              text=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              type=\"search\"\n              placeholder=\"Search movie\"\n            />\n            <button type=\"submit\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 32 32\"\n              >\n                <path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"></path>\n              </svg>\n            </button>\n          </div>\n          {loading && <RotatingLines {...RotatingLinesStyle} />}\n          {movies !== false && <FilmsList data={movies} />}\n        </MoviesForm>\n      </main>\n    </>\n  );\n}","import axios from 'axios';\n\nconst API_KEY = '560a91da1aaf90af92f6db93300e98bd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst IMG_BASE_URL = `https://image.tmdb.org/t/p`;\n\nexport const searchImages = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w400${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport const searchCastImage = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w200${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport async function searchMovies(query) {\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      query: `${query}`,\n      include_adult: 'false',\n    },\n  });\n\n  return data;\n}\n\nexport async function getTrending() {\n  const { data } = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: `${API_KEY}`,\n      page: 1,\n    },\n  });\n  return data;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data;\n}","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n  theme: 'colored',\n};\n\nexport const toastSuccess = () => {\n  return toast.success(\n    'Yay! We found what you were looking for!',\n    toastSettings\n  );\n};\n\nexport const toastInfoNothing = () => {\n  return toast.info(\n    'It looks like you want to find nothing, please check your query',\n    toastSettings\n  );\n};\n\nexport const toastInfoDuplication = () => {\n  return toast.info(\n    'It looks like there are already movies found for your request, please check if this will be a new search',\n    toastSettings\n  );\n};\n\nexport const toastWarn = () => {\n  return toast.warn(\n    'Sorry, nothing was found for your request, try something else',\n    toastSettings\n  );\n};\n\nexport const toastError = () => {\n  return toast.error(\n    'Oops, something went wrong. Please try again!',\n    toastSettings\n  );\n};"],"names":["FilmsListStyled","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","FilmsListItem","_templateObject2","fontSizes","m","transition","cubicBezier","transform","scaleFirst","FilmsList","_ref","data","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","imgPoster","searchImages","console","log","Link","state","from","to","concat","_jsxs","src","alt","MoviesForm","colors","bg_dark","text","borders","none","primary","Movies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","movies","setMovies","_useState5","_useState6","loading","setloading","useEffect","searchMovies","then","res","total_results","toastInfoNothing","toastSuccess","setTimeout","trim","results","catch","toastError","finally","_Fragment","style","flexGrow","onSubmit","event","preventDefault","currentTarget","querySelector","value","autoComplete","autoFocus","type","placeholder","xmlns","width","height","fill","viewBox","d","RotatingLines","_objectSpread","RotatingLinesStyle","API_KEY","BASE_URL","IMG_BASE_URL","poster","_x","_searchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","axios","params","api_key","language","include_adult","sent","abrupt","stop","getTrending","_getTrending","_callee2","_yield$axios$get2","_context2","page","getMovieDetails","_x2","_getMovieDetails","_callee3","_yield$axios$get3","_context3","getMovieCast","_x3","_getMovieCast","_callee4","_yield$axios$get4","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_yield$axios$get5","_context5","toastSettings","toast"],"sourceRoot":""}