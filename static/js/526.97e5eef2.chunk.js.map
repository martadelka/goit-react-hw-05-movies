{"version":3,"file":"static/js/526.97e5eef2.chunk.js","mappings":"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","sources":["components/FilmsList/FilmsList.styled.js","components/FilmsList/FilmsList.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/fetchAPI.js","services/toasts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmsListStyled = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  gap: ${p => p.theme.space[5]}px;\n\n  margin-left: 160px;\n  margin-right: 160px;\n`;\n\nexport const FilmsListItem = styled.li`\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n  transition: ${p => p.theme.transition.cubicBezier};\n  &:hover {\n    transform: ${p => p.theme.transform.scaleFirst};\n  }\n  & p {\n    max-width: 400px;\n    word-wrap: break-word;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { searchImages } from '../../services/fetchAPI';\nimport { FilmsListStyled, FilmsListItem } from '../FilmsList/FilmsList.styled';\n\nexport default function FilmsList({ data }) {\n  const location = useLocation();\n\n  return (\n    <FilmsListStyled>\n      {data.map(({ id, title, poster_path }) => {\n        const imgPoster = searchImages(poster_path);\n        console.log(imgPoster);\n        return (\n          <Link state={{ from: location }} to={`/movies/${id}`} key={id}>\n            <FilmsListItem>\n              <img src={imgPoster} alt={title} />\n              <p>{title}</p>\n            </FilmsListItem>\n          </Link>\n        );\n      })}\n    </FilmsListStyled>\n  );\n}\n\nFilmsList.propTypes = {\n  data: PropTypes.array.isRequired,\n};","import styled from 'styled-components';\n\nexport const HomeTitle = styled.h1`\n  display: block;\n  text-align: center;\n  margin: 15px auto;\n\n  color: ${p => p.theme.colors.primary};\n`;","import { useState, useEffect } from 'react';\nimport { getTrending } from '../../services/fetchAPI';\n\nimport FilmsList from '../../components/FilmsList/FilmsList';\nimport { toastError } from '../../services/toasts';\n\nimport { HomeTitle } from './Home.styled';\nimport { Box } from '../../components/Box';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrending()\n      .then(res => {\n        setMovies(res.results);\n      })\n      .catch(toastError);\n  }, []);\n\n  return (\n    <>\n      <Box style={{ flexGrow: '1' }}>\n        <HomeTitle>20 Most Popular Movies Right Now</HomeTitle>\n        <FilmsList data={movies} />\n      </Box>\n    </>\n  );\n}","import axios from 'axios';\n\nconst API_KEY = '560a91da1aaf90af92f6db93300e98bd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst IMG_BASE_URL = `https://image.tmdb.org/t/p`;\n\nexport const searchImages = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w400${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport const searchCastImage = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w200${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport async function searchMovies(query) {\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      query: `${query}`,\n      include_adult: 'false',\n    },\n  });\n\n  return data;\n}\n\nexport async function getTrending() {\n  const { data } = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: `${API_KEY}`,\n      page: 1,\n    },\n  });\n  return data;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data;\n}","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n  theme: 'colored',\n};\n\nexport const toastSuccess = () => {\n  return toast.success(\n    'Yay! We found what you were looking for!',\n    toastSettings\n  );\n};\n\nexport const toastInfoNothing = () => {\n  return toast.info(\n    'It looks like you want to find nothing, please check your query',\n    toastSettings\n  );\n};\n\nexport const toastInfoDuplication = () => {\n  return toast.info(\n    'It looks like there are already movies found for your request, please check if this will be a new search',\n    toastSettings\n  );\n};\n\nexport const toastWarn = () => {\n  return toast.warn(\n    'Sorry, nothing was found for your request, try something else',\n    toastSettings\n  );\n};\n\nexport const toastError = () => {\n  return toast.error(\n    'Oops, something went wrong. Please try again!',\n    toastSettings\n  );\n};"],"names":["FilmsListStyled","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","FilmsListItem","_templateObject2","fontSizes","m","transition","cubicBezier","transform","scaleFirst","FilmsList","_ref","data","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","imgPoster","searchImages","console","log","Link","state","from","to","concat","_jsxs","src","alt","HomeTitle","colors","primary","Home","_useState","useState","_useState2","_slicedToArray","movies","setMovies","useEffect","getTrending","then","res","results","catch","toastError","_Fragment","Box","style","flexGrow","API_KEY","BASE_URL","IMG_BASE_URL","poster","searchMovies","_x","_searchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","query","_yield$axios$get","_context","prev","next","axios","params","api_key","language","include_adult","sent","abrupt","stop","_getTrending","_callee2","_yield$axios$get2","_context2","page","getMovieDetails","_x2","_getMovieDetails","_callee3","_yield$axios$get3","_context3","getMovieCast","_x3","_getMovieCast","_callee4","_yield$axios$get4","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_yield$axios$get5","_context5","toastSettings","toastInfoNothing","toast"],"sourceRoot":""}