{"version":3,"file":"static/js/561.8e9d86d5.chunk.js","mappings":"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","sources":["components/FilmsList/FilmsList.styled.js","components/FilmsList/FilmsList.js","components/Form/FormM.styled.js","components/Form/FormMovies.js","pages/Movies/Movies.js","services/fetchAPI.js","services/toasts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmsListStyled = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  gap: ${p => p.theme.space[5]}px;\n\n  margin-left: 160px;\n  margin-right: 160px;\n`;\n\nexport const FilmsListItem = styled.li`\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n  transition: ${p => p.theme.transition.cubicBezier};\n  &:hover {\n    transform: ${p => p.theme.transform.scaleFirst};\n  }\n  & p {\n    max-width: 400px;\n    word-wrap: break-word;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { searchImages } from '../../services/fetchAPI';\nimport { FilmsListStyled, FilmsListItem } from '../FilmsList/FilmsList.styled';\n\nexport default function FilmsList({ data }) {\n  const location = useLocation();\n\n  return (\n    <FilmsListStyled>\n      {data.map(({ id, title, poster_path }) => {\n        const imgPoster = searchImages(poster_path);\n        console.log(imgPoster);\n        return (\n          <Link state={{ from: location }} to={`/movies/${id}`} key={id}>\n            <FilmsListItem>\n              <img src={imgPoster} alt={title} />\n              <p>{title}</p>\n            </FilmsListItem>\n          </Link>\n        );\n      })}\n    </FilmsListStyled>\n  );\n}\n\nFilmsList.propTypes = {\n  data: PropTypes.array.isRequired,\n};","import styled from 'styled-components';\n\nexport const FormM = styled.form`\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 20px 0px;\n\n    button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: ${p => p.theme.colors.bg_dark};\n      height: 48px;\n      width: 80px;\n      border-radius: 5px;\n      margin: 0 6px;\n      color: ${p => p.theme.colors.text};\n      border: ${p => p.theme.borders.none};\n\n      &:hover {\n        color: ${p => p.theme.colors.primary};\n      }\n    }\n  }\n\n  & input {\n    display: block;\n    text-align: center;\n    font-size: ${p => p.theme.fontSizes.m};\n\n    height: 48px;\n    width: 300px;\n\n    border-radius: 5px;\n    border: ${p => p.theme.borders.none};\n\n    ::placeholder {\n      font-size: ${p => p.theme.fontSizes.m};\n    }\n  }\n`;","import { useState } from 'react'\nimport { BsSearch } from 'react-icons/bs';\nimport { FormM } from './FormM.styled'\n\nexport const FormMovies = ({ onSubmit }) => {\n  const [searchedValue, setSearchedValue] = useState('');\n\n  const handleSearch = evt => {\n    setSearchedValue(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const query = searchedValue.trim().toLowerCase();\n    if (!query) return;\n\n    onSubmit(query);\n    setSearchedValue('');\n  };\n  \n  return (\n    <FormM onSubmit={handleSubmit}>\n      <div>\n        <button type='submit'>\n          <BsSearch size={16} />\n        </button>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          name={searchedValue}\n          placeholder=\"Search movies\"\n          onChange={handleSearch}\n        />\n      </div>\n    </FormM>\n  );\n};\n\n\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { searchMovies } from '../../services/fetchAPI';\nimport FilmsList from '../../components/FilmsList/FilmsList';\nimport {\n  toastInfoNothing,\n//   toastError,\n//   toastSuccess,\n} from '../../services/toasts';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { RotatingLinesStyle } from '../../services/spinnerStyles';\nimport { FormMovies } from '../../components/Form/FormMovies';\n\nexport default function Movies() {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const querySearched = searchParams.get('query');\n\n  useEffect(() => {\n    if (!querySearched) return;\n    async function getFilms() {\n      try {\n        setloading(true);\n\n        const { results } = await searchMovies(querySearched);\n\n        setSearchedMovies(results);\n      } catch (error) {\n        toastInfoNothing();;\n      } finally {\n        setloading(false);\n      }\n    }\n    getFilms();\n  }, [querySearched]);\n\n  const handleOnSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n    <main style={{ flexGrow: '1' }}>\n    {loading && <RotatingLines {...RotatingLinesStyle} />}\n    <FormMovies onSubmit={handleOnSubmit} />\n    {searchedMovies !== false && <FilmsList data={searchedMovies} />}\n    </main>\n    </>\n  );\n}\n\n\n","import axios from 'axios';\n\nconst API_KEY = '560a91da1aaf90af92f6db93300e98bd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst IMG_BASE_URL = `https://image.tmdb.org/t/p`;\n\nexport const searchImages = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w400${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport const searchCastImage = poster => {\n  return poster !== null\n    ? `${IMG_BASE_URL}/w200${poster}`\n    : 'https://sd.keepcalms.com/i-w400/keep-calm-poster-not-found.jpg';\n};\n\nexport async function searchMovies(query) {\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      query: `${query}`,\n      include_adult: 'false',\n    },\n  });\n\n  return data;\n}\n\nexport async function getTrending() {\n  const { data } = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: `${API_KEY}`,\n      page: 1,\n    },\n  });\n  return data;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data;\n}","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n  theme: 'colored',\n};\n\nexport const toastSuccess = () => {\n  return toast.success(\n    'Yay! We found what you were looking for!',\n    toastSettings\n  );\n};\n\nexport const toastInfoNothing = () => {\n  return toast.info(\n    'It looks like you want to find nothing, please check your query',\n    toastSettings\n  );\n};\n\nexport const toastInfoDuplication = () => {\n  return toast.info(\n    'It looks like there are already movies found for your request, please check if this will be a new search',\n    toastSettings\n  );\n};\n\nexport const toastWarn = () => {\n  return toast.warn(\n    'Sorry, nothing was found for your request, try something else',\n    toastSettings\n  );\n};\n\nexport const toastError = () => {\n  return toast.error(\n    'Oops, something went wrong. Please try again!',\n    toastSettings\n  );\n};"],"names":["FilmsListStyled","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","FilmsListItem","_templateObject2","fontSizes","m","transition","cubicBezier","transform","scaleFirst","FilmsList","_ref","data","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","imgPoster","searchImages","console","log","Link","state","from","to","concat","_jsxs","src","alt","FormM","colors","bg_dark","text","borders","none","primary","FormMovies","onSubmit","_useState","useState","_useState2","_slicedToArray","searchedValue","setSearchedValue","evt","preventDefault","query","trim","toLowerCase","type","BsSearch","size","autoComplete","name","placeholder","onChange","target","value","Movies","searchedMovies","setSearchedMovies","_useState3","_useState4","loading","setloading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","querySearched","get","useEffect","_getFilms","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$searchMovies","results","_context","prev","next","searchMovies","sent","t0","toastInfoNothing","finish","stop","apply","arguments","getFilms","_Fragment","style","flexGrow","RotatingLines","_objectSpread","RotatingLinesStyle","API_KEY","BASE_URL","IMG_BASE_URL","poster","_x","_searchMovies","_yield$axios$get","axios","params","api_key","language","include_adult","abrupt","getTrending","_getTrending","_callee2","_yield$axios$get2","_context2","page","getMovieDetails","_x2","_getMovieDetails","_callee3","_yield$axios$get3","_context3","getMovieCast","_x3","_getMovieCast","_callee4","_yield$axios$get4","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_yield$axios$get5","_context5","toastSettings","toast","toastError"],"sourceRoot":""}